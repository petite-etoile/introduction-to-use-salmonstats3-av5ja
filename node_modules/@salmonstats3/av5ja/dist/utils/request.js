import { CapacitorHttp } from '@capacitor/core';
import snakecaseKeys from 'snakecase-keys';
import { Method } from '../enum/method';
export async function request(request) {
    const url = new URL(request.path, request.baseURL);
    if (request.method === Method.GET) {
        url.search = new URLSearchParams(request.parameters).toString();
    }
    const body = request.method === Method.GET ? undefined : JSON.stringify(request.parameters);
    const options = {
        data: body,
        headers: request.headers,
        method: request.method,
        responseType: 'json',
        url: url.href,
    };
    const response = await CapacitorHttp.request(options);
    if (response.status !== 200 && response.status !== 201) {
        console.error(request);
        console.error(JSON.stringify(response.data));
        throw new Error(`Request failed with status code ${response.status}`);
    }
    return request.request(snakecaseKeys(response.data));
}
//# sourceMappingURL=request.js.map