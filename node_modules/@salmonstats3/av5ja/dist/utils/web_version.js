import { Method } from '../enum/method';
export var Web;
(function (Web) {
    let Hash;
    (function (Hash) {
        class Request {
            baseURL = 'https://api-lp1.znc.srv.nintendo.net/';
            headers;
            method = Method.GET;
            parameters;
            path = '';
            constructor() { }
            request(response) {
                return new Response(response);
            }
        }
        Hash.Request = Request;
        class Response {
            js;
            css;
            constructor(raw_value) {
                let regexp = /static\/js\/main.([a-f0-9]{8})/;
                let match = regexp.exec(raw_value);
                this.js = match === null ? '631eca4e' : match[1];
                regexp = /static\/css\/main.([a-f0-9]{8})/;
                match = regexp.exec(raw_value);
                this.css = match === null ? '726ac373' : match[1];
            }
        }
        Hash.Response = Response;
    })(Hash = Web.Hash || (Web.Hash = {}));
    let Version;
    (function (Version) {
        class Request {
            baseURL = 'https://api-lp1.znc.srv.nintendo.net/';
            headers;
            method = Method.GET;
            parameters;
            path;
            constructor(hash) {
                this.path = `static/js/main.${hash}.js`;
            }
            request(response) {
                return new Response(response);
            }
        }
        Version.Request = Request;
        class Response {
            version;
            revision;
            get web_version() {
                return `${this.version}-${this.revision}`;
            }
            constructor(raw_value) {
                let regexp = /`(\d\.\d\.\d)-/;
                let match = regexp.exec(raw_value);
                this.version = match === null ? '4.0.0' : match[1];
                regexp = /REACT_APP_REVISION: "([a-f0-9]{32})"/;
                match = regexp.exec(raw_value);
                this.revision = match === null ? '355675c2' : match[1].slice(0, 7);
            }
        }
        Version.Response = Response;
    })(Version = Web.Version || (Web.Version = {}));
})(Web || (Web = {}));
//# sourceMappingURL=web_version.js.map