import { Method } from '../enum/method';
export interface ResponseType {
}
export type Headers = Record<string, string>;
export type Parameters = URLSearchParams | undefined | Record<string, string | number | undefined | Record<string, string | number | undefined>>;
export interface RequestType {
    readonly baseURL: string;
    readonly headers: Headers;
    readonly method: Method;
    readonly parameters: Parameters;
    readonly path: string;
    request(response: any): ResponseType | void;
}
export declare function request<T extends RequestType, U extends ReturnType<T['request']>>(request: T): Promise<U>;
