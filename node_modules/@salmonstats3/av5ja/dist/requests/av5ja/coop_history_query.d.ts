import { ModeType } from '../../enum/mode';
import { RuleType } from '../../enum/rule';
import { SHA256Hash } from '../../enum/sha256hash';
import { Common } from '../../utils/common';
import { GraphQL, ResponseType } from '../../utils/graph_ql';
import { Parameters } from '../../utils/request';
import 'reflect-metadata';
export declare namespace CoopHistoryQuery {
    export class Request implements GraphQL {
        readonly hash: SHA256Hash;
        readonly parameters: Parameters;
        request(response: any): CoopHistoryQuery.Response;
    }
    class HistoryDetail {
        readonly id: Common.CoopHistoryDetailId;
    }
    class HistoryGroupNode {
        readonly nodes: HistoryGroup[];
    }
    class HistoryDetailNode {
        readonly nodes: HistoryDetail[];
    }
    export class HistoryGroup {
        readonly start_time: Date | null;
        readonly end_time: Date | null;
        readonly mode: ModeType;
        readonly rule: RuleType;
        readonly history_details: HistoryDetailNode;
        get result_id_list(): Common.CoopHistoryDetailId[];
    }
    class CoopResult {
        readonly history_groups: HistoryGroupNode;
    }
    class DataClass {
        readonly coop_result: CoopResult;
    }
    export class Response implements ResponseType {
        readonly data: DataClass;
        get history_groups(): HistoryGroup[];
        /**
         * リザルトIDをプレイ時間で昇順にソート
         */
        get coop_result_detail_ids(): Common.CoopHistoryDetailId[];
        private readonly raw_value;
        json(): JSON;
    }
    export {};
}
